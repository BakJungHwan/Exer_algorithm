Question. 최솟값 만들기 -> https://programmers.co.kr/learn/challenge_codes/179
자연수로 이루어진 길이가 같은 수열 A,B가 있습니다. 최솟값 만들기는 A, B에서 각각 한 개의 숫자를 뽑아 두 수를 곱한 값을 누적하여 더합니다. 이러한 과정을 수열의 길이만큼 반복하여 최종적으로 누적된 값이 최소가 되도록 만드는 것이 목표입니다.

예를 들어 A = [1, 2] , B = [3, 4] 라면

1. A에서 1, B에서 4를 뽑아 곱하여 더합니다.
2. A에서 2, B에서 3을 뽑아 곱하여 더합니다.
수열의 길이만큼 반복하여 최솟값 10을 얻을 수 있으며, 이 10이 최솟값이 됩니다.
수열 A,B가 주어질 때, 최솟값을 반환해주는 getMinSum 함수를 완성하세요.

Python
    새로운 시도. 생각처럼 되지 않았다
    A = [1,2]
    B = ["a", "b"]

    for a,b in A,B:
        print("a = {}".format(a))
	print("b = {}".format(b))

>>>
a = 1
b = 2
a = a
b = b
--> 내가 생각했던것은 dict.items()나 enumerate을 활용하는 것과 비슷한 결과였는데 저런 경우는 A와 B의 값이 연달아 순환되는 모습을 알 수 있었다.


Java
나의 풀이와 매우 비슷했다.


C/C++
vector<int> tA{1,2}, tB{3,4};
C++98 이런 형태로 여러 vector를 {}로 초기화 가능

C++11에서는 시작주소와 끝주소를 지정해 주어야한다.
Data메모리에 있는 {1,2}를 pA에 직접 대입하면 작동하지 않는다.
컴파일러 에러를 보면 "[Error] no matching function for call to 'std::vector<int>::vector(<brace-enclosed initializer list>, <brace-enclosed initializer list>)"
이렇게 나오는데, 생성자에서 지원하지 않는 형태이기 때문에 중간에 포인터 형태로 바꿔줘야 하는 것 같다.

int pA[] = {1,2};
int pB[] = {3,4};
vector<int> tA(pA,pA+sizeof(pA)/sizeof(int)), tB(pB,pB+sizeof(pB)/sizeof(int));


JavaScript