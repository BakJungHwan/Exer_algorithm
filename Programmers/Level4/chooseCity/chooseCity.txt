Question. 공항 건설하기 --> https://programmers.co.kr/learn/challenge_codes/185

풀이 알고리즘 설명
공항을 지을수 있는 각 지점 사이를 좌표라 생각하고 미리 주어진 위치가 아닌 좌표에도
공항을 지을 수 있다고 가정하고, 모든 좌표에 사람을 +1한다.
여기서 가장 앞에서부터 한칸씩 이동하면서 채점한다고 생각해보자. 한번 움직이면 움직이는 기준 왼쪽의 인구수가 더해지고, 오른쪽 인구수 만큼 줄어든다.
즉, 왼쪽 인구수의 총합과 오른쪽 인구수의 총합이 일치하게 되는 지점이 가장 이상적인 위치가 된다.
하지만 여러 지점 중에 앞에 있는 지점이 정답이 되므로, 앞에서부터 하나씩 더해가면서 총합의 중간이 되는 지점이 답이 된다.
!!! 아이디어가 중요하다!!
-- 종합적인 시야가 없으면 이해하기 힘든 문제다. 변하는 값을 기준으로 삼을 수 있다는 점을 감안하면 좋을 것 같다.


Java
1.
        Arrays.sort(city,new Comparator<int[]>(){
            @Override
            public int compare(final int[] arr1, final int[] arr2)
            {
                if(arr1[1] - arr2[1] > 0)
                {
                    return -1;
                }
                else return 1;
            }
        });

몇번을 반복하는 커스텀 Comparator객체 선언법 이번기회에 잘 이해해두자.

단, Comparator을 사용하려면 항상 import를 해야한다.


C++
2.

bool compare(const T &a, const T &b)
{
	리턴값을 bool형태로!!
{
숫자값으로 리턴하면 런타임에러가 발생한다.