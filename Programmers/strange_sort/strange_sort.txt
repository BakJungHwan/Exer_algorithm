Question. 문자열 내 마음대로 정렬하기 --> https://programmers.co.kr/learn/challenge_codes/95

Python
1. Lambda식 세우기
return sorted(strings, key=lambda x: x[n])

그래, Lambda를 잊고 있었지..





Java
Comparable과 Comparator 예제 --> http://cwondev.tistory.com/15
C의 quick sort를 활용할 때처럼, key함수를 어떻게 사용해야할지 고민이 되었다.

Comparable은 객체가 갖고 있는 '기본 정렬 방식'이다. 이 녀석을 오버라이드해서 새로운 '기본'을 설정할 수 있다.
Comparator는 객체를 수정하지 않고 Comparable외에 다른 방식으로 정렬을 하려고 할 때 사용하는 인터페이스이다.
  // 재미있는 것은 Comparable을 구현할 때, compare외에도 equals라는 메서드를 구현하라고 되어있는데, 몰래 구현을 안해봤다. 잘 되더라!!



!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
위 예제 url에서 이해안가는 코드!!!
Comparable을 구현할 때,
@Override
public int compareTo(SoccerPlayer player){
	return name.compareTo(player.getName());
}
이러면, 무한 재귀함수가 되는 것이 아닌가 싶은데 누군가에게 묻고 싶다.!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!




Comparable 나름의 이해를 갖고 시도(운 좋게 성공!!)
	public static ArrayList<String>	strange_sort(ArrayList<String> strings, int n)
	{
		strings.sort(new indexComparator(n));
		return strings;
	}

class indexComparator implements Comparator<String>
{
	int n;

	public indexComparator(int n)
	{
		this.n = n;
	}

	public 
		int compare(String o1, String o2)
	{
		return o1.charAt(n) - o2.charAt(n);
	}

	//public static boolean equals(St
}





@Override
// annotation의 하나. 상위 클래스에서 오버라이드한 메서드라는 것을 지칭.
아래에 오버라이드 할 메서드를 정의하면 된다. 만약에 상속받은 메서드가 아니면, 컴파일 에러를 발생시킨다.